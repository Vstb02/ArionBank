@page "/Card"
@using ArionBank.Account.Service.Card
@using ArionBank.Application.Models
@using System.Security.Claims
@using ArionBank.Domain.Enums
@inject ICardService _cardService
@inject NavigationManager NavigationManager

@if (ShowErrors)
{
    <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 5">
        <div id="liveToast" class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                <strong class="me-auto">Ошибка аутентификации</strong>
                <small>@DateTime.Now.ToString("D")</small>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Закрыть"></button>
            </div>
            <div class="toast-body">
                @foreach (var Error in Error)
                {
                    <p>@Error</p>
                }
            </div>
        </div>
    </div>
    <div class="alert alert-danger" role="alert">
        <p>@Error</p>
    </div>
}

<main class="col-lg-8" id="main">
   <div class="h1 text-center" style="margin-top: 50px; font-size: 32px;">Оформление карты</div>
   <div class="select" style="margin-top: 120px;">
        <span>Имя</span>
        <input @bind="card.Name" id="mInput" type="text" class="form-control mInput-2">
        <span>Фамилия</span>
        <input @bind="card.Surname" id="mInput" type="text" class="form-control mInput-2">
        <span class="header-credit">Тип карты</span>
        <select @bind="card.Type" id="mInput" class="form-select mInput" aria-label="Default select example">
            <option value="@TypesCard.Credit">Кредитная</option>
            <option value="@TypesCard.Debit">Дебетовая</option>
        </select>
        <span class="header-credit">Платежная система</span>
        <select @bind="card.PaymentSystem" id="mInput" class="form-select mInput" aria-label="Default select example">
            <option value="@PaymentSystems.MasterCard">MaserCard</option>
            <option value="@PaymentSystems.Visa">Visa</option>
        </select>
        <button @onclick="HandelCard" class="btn-custom-2 w-10 mt-2 text-center" style="width: 200px; margin: auto;">Оформить</button>
    </div>
</main>

@code {
    private CardCreateModel card = new CardCreateModel();
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    private IEnumerable<string> Error;
    private bool ShowErrors;


    public async Task HandelCard()
    {
        var authState = await authenticationStateTask;
        var user = authState.User;
        string id = user.Claims.Where(x => x.Type == ClaimTypes.NameIdentifier).FirstOrDefault().Value;
        try
        {
            card.UserId = Guid.Parse(id);   
        }
        catch{
            Error.Append("Произошла непредвиденная ошибка");
            ShowErrors = true;
        }

        var result = await _cardService.CreateCard(card);

        if (result.Successful)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            Error = result.Errors;
            ShowErrors = true;
        }
    }
}
