@page "/operation"
@using ArionBank.Account.Models
@using ArionBank.Account.Service.Card
@using ArionBank.Account.Service.Manager
@using ArionBank.Account.Service.Operation
@using ArionBank.Application.Models
@using System.Security.Claims
@using ArionBank.Domain.Enums
@inject IOperationService _operationService
@inject ICardService _cardService
@inject NavigationManager NavigationManager
@inject IManagerService _managerService

<main class="col-lg-8" id="main">
    <div class="h1 text-center" style="margin-top: 50px; font-size: 32px;">Беспроцентный перевод между клиентами банка Arion</div>
    <div class="select" style="margin-top: 120px;">
        <EditForm Model="opModel" OnValidSubmit="OperationHandler">
            <div style="color: red; text-align: left">
                <DataAnnotationsValidator />
                <ValidationSummary />
            </div>
        <span class="header-credit">Счет</span>
        <select @bind="opModel.CardId" id="mInput" class="form-select mInput" aria-label="Default select example">
                    <option value="">Выбрать счет</option>
                    @if(cardList.Cards != null)
                    @foreach(var Item in cardList.Cards)
                    {
                        if(Item.Type == TypesCard.Debit)
                        {
                            <option value="@Item.Id">@Item.Number - @Item.PaymentSystem | @Item.Id</option>
                        }
                    }
                </select>
        <div class="mt-3">
             <div class="form-group">
                <span>Номер карты</span>
                <InputText type="text" id="mInput" Class="form-control mInput2" @bind-Value="opModel.Number" />
            </div>
             <div class="form-group">
                <span>Сумма перевода</span>
                <input id="mInput" Class="form-control mInput2" @bind="opModel.Ammount" />
            </div>
            <div @onclick="OperationHandler" class="btn-custom-2 w-10 mt-2 text-center" style="width: 200px; margin: auto;">Перевести</div>
        </div>
        </EditForm>
    </div>
</main>

@code {
    OperationModel opModel = new OperationModel();
    CardListModel cardList = new CardListModel();
    IEnumerable<string> Error = new List<string>();
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    private bool ShowErrors;
    private Guid UserId;
    private AvatarModel avatar = new AvatarModel();
    private string Name = string.Empty;
    private byte[] image;
    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationStateTask;
        var user = authState.User;

        string id = string.Empty;
        try
        {
            id = user.Claims.Where(x => x.Type == ClaimTypes.NameIdentifier).FirstOrDefault().Value;
            UserId = Guid.Parse(id);
        }
        catch{
            Error.Append("Произошла непредвиденная ошибка");
            ShowErrors = true;
        }

        Name = user.Identity.Name;
        avatar = await _managerService.GetAvatar(Name);
        image = avatar.Avatar;
        cardList = await _cardService.GetCardList(UserId);

    }
    private async Task OperationHandler()
    {
        opModel.Image = image;
        opModel.Name = avatar.Name;
        var result = await _operationService.InfestFreeTransfer(opModel);

        if (result.Successful)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            Error = result.Errors;
            ShowErrors = true;
        }
    }
}
